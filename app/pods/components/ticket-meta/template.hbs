{{#if (and responderForCurrentUser (not responderForCurrentUser.isNew))}}
  <div class="alert alert--sm alert--info alert--segmented mb-4">
    <p>{{t 'ticket.responder.selfNotice'}}</p>
    {{#unless unassignSelf.isRunning}}
      <p><a href {{action 'unassignSelf'}} data-test-unassign-self>
        {{~t 'ticket.responder.selfRemove'~}}
      </a></p>
    {{else}}
      {{ui-spinner}}
    {{/unless}}
  </div>
{{/if}}

{{#if (and subscriberForCurrentUser (not subscriberForCurrentUser.isNew))}}
  <div class="alert alert--sm alert--info alert--segmented mb-4">
    <p>{{t 'ticket.subscriber.selfNotice'}}</p>
    {{#unless unsubscribeSelf.isRunning}}
      <p><a href {{action 'unsubscribeSelf'}} data-test-unsubscribe-self>
        {{~t 'ticket.subscriber.selfRemove'~}}
      </a></p>
    {{else}}
      {{ui-spinner}}
    {{/unless}}
  </div>
{{/if}}


{{! Responders}}

{{#if (and (can 'manage tickets') model.isOpen)}}
  <h4 class="t-light mb-3">{{t 'ticket.responder.label'}}</h4>

  <ul class="editableList mb-3">
    {{#if model.responders.length}}
      {{#each model.responders as |responder|}}
        {{#unless responder.isNew}}
        {{#editable-list-item class="editableList-item" onRemove=(action 'removeResponder' responder) data-test-responder=responder.user.id}}
          {{user-avatar user=responder.user}}{{responder.user.displayName}}
        {{/editable-list-item}}
        {{/unless}}
      {{/each}}
    {{else}}
      <li class="editableList-item editableList-item--empty">
        {{~t 'ticket.responder.empty'~}}
      </li>
    {{/if}}
  </ul>

  {{#if (or addResponder.isRunning removeResponder.isRunning)}}
    {{ui-spinner class="spinner--mimicButton"}}
  {{else}}
    {{#ui-dropdown data-test-dd="assign-responder" as |dd|}}
      {{#dd.trigger class="button button--sm button--primary t-right with-caret"}}
        {{t 'actions.assign.longForm'}}
      {{/dd.trigger}}
      {{#dd.body
        attachment=(if i18n.isRtl "top right" "top left")
        targetAttachment=(if i18n.isRtl "bottom right" "bottom left")
      }}
        {{search-users
          task=searchStaff
          current=model.responderIds
          onSelect=(pipe-action (action 'addResponder') dd.close)}}
      {{/dd.body}}
    {{/ui-dropdown}}
  {{/if}}
{{else if model.responders.length}}
  <h4 class="t-light mb-3">{{t 'ticket.responder.label'}}</h4>

  <ul class="editableList">
    {{#each model.responders as |responder|}}
      <li class="editableList-item" data-test-responder={{responder.user.id}}>{{responder.user.displayName}}</li>
    {{/each}}
  </ul>
{{/if}}


{{! Subscribers}}

{{#if (can 'resolve tickets')}}
  {{#if model.isOpen}}
    <h4 class="t-light mb-3 mt-5">{{t 'ticket.subscriber' count=2}}</h4>

    <ul class="editableList mb-3">
      {{#if model.subscribers.length}}
        {{#each model.subscribers as |subscriber|}}
          {{#unless subscriber.isNew}}
          {{#editable-list-item class="editableList-item" onRemove=(action 'removeSubscriber' subscriber) data-test-subscriber=subscriber.id}}
            {{#if subscriber.user}}
              {{~user-avatar user=subscriber.user~}}
            {{else}}
              {{~icon "mail"~}}
            {{/if}}
            {{~subscriber.displayName~}}
          {{/editable-list-item}}
          {{/unless}}
        {{/each}}
      {{/if}}
    </ul>

    {{ticket-add-subscriber
      ticket=model
      afterSave=(action 'afterAddSubscriber')
      disable=removeSubscriber.isRunning}}
  {{else if model.subscribers.length}}
    <h4 class="t-light mb-3 mt-5">{{t 'ticket.subscriber' count=2}}</h4>
    <ul class="editableList">
      {{#each model.subscribers as |subscriber|}}
        <li class="editableList-item" data-test-subscriber={{subscriber.user.id}}>{{subscriber.user.displayName}}</li>
      {{/each}}
    </ul>
  {{/if}}
{{/if}}
