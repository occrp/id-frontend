//
// Base styles
//

.button {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  padding: $btn-padding-y $btn-padding-x;
  font-size: $font-size-sm;
  line-height: $btn-line-height;
  border-radius: $border-radius;
  transition: $btn-transition;
  text-transform: uppercase;

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }
  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: .65;
    box-shadow: none;
  }

  &:active,
  &.active {
    box-shadow: $btn-focus-box-shadow/*, $btn-active-box-shadow*/;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.button.disabled,
fieldset[disabled] a.button {
  pointer-events: none;
}


// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant(
  $background,
  $border,
  $active-background: darken($background, 7.5%),
  $active-border: darken($border, 10%)
) {
  color: color-yiq($background);
  background-color: $background;
  border-color: $border;

  [class^="icon-"] {
    fill: color-yiq($active-background);
  }

  @include hover {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 3px rgba($border, .5);
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:active,
  &.active {
    background-color: $active-background;
    border-color: $active-border;
    //box-shadow: $btn-active-box-shadow;
  }
}

@mixin button-outline-variant(
  $color,
  $color-hover: #fff,
  $background-color: transparent
) {
  color: $gray-700;
  background-color: $background-color;
  border-color: $gray-500;

  [class^="icon-"] {
    fill: theme-color("secondary");
  }

  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;

    [class^="icon-"] {
      fill: $color-hover;
    }
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 3px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: $background-color;
  }

  &:active,
  &.active {
    color: $color-hover;
    background-color: $color;
    border-color: $color;

    [class^="icon-"] {
      fill: $color-hover;
    }
  }

}

.with-caret {
  @include caret;
}



//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .button--#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .buttonOutlined--#{$color} {
    @include button-outline-variant($value, white, white);
  }
}



//
// Link buttons
//

// Make a button look and behave like a link
.button--link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


.button--icon {
  color: $link-color;
  background-color: transparent;
  border: 0;
  // width: 24px;
  // height: 24px;
  padding: 0;
  line-height: 1;
  box-sizing: content-box;

  @include hover {
    color: $link-hover-color;
    background-color: transparent;
  }

  &:focus,
  &.focus {
    // box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  .icon {
    vertical-align: middle;
    margin: 0 !important;
  }
}

.button--icon.button--dark {
  color: $gray-600;

  @include hover {
    color: $gray-800;
    background-color: transparent;
  }
}



//
// Button Sizes
//

@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

.button--sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-xs, $btn-line-height-sm, $border-radius);
}

// TODO: old. remake
.button--micro {
  font-size: 11px;
  line-height: 16px;
  padding: 2px 8px;
}


//
// Block button
//

.button--block {
  display: block;
  width: 100%;
}
