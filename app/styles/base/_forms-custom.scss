// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://useiconic.com/open


// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.customControl {
  position: relative;
  display: inline-flex;
  min-height: (1rem * $line-height-base);
  padding-left: $custom-control-gutter;
  margin-right: $custom-control-spacer-x;

  @include rtl {
    padding-left: 0;
    margin-right: 0;
    padding-right: $custom-control-gutter;
    margin-left: $custom-control-spacer-x;
  }
}

.customControl-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &:checked ~ .customControl-indicator {
    color: $custom-control-indicator-checked-color;
    background-color: $custom-control-indicator-checked-bg;
    box-shadow: $custom-control-indicator-checked-box-shadow;
  }

  &:focus ~ .customControl-indicator {
    // the mixin is not used here to make sure there is feedback
    box-shadow: $custom-control-indicator-focus-box-shadow;
  }

  &:active ~ .customControl-indicator {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    box-shadow: $custom-control-indicator-active-box-shadow;
  }

  &:disabled {
    ~ .customControl-indicator {
      background-color: $custom-control-indicator-disabled-bg;
    }

    ~ .customControl-description {
      color: $custom-control-description-disabled-color;
    }
  }
}

// Custom indicator
//
// Generates a shadow element to create our makeshift checkbox/radio background.

.customControl-indicator {
  position: absolute;
  top: (($line-height-base - $custom-control-indicator-size) / 2);
  left: 0;
  display: block;
  width: $custom-control-indicator-size;
  height: $custom-control-indicator-size;
  pointer-events: none;
  user-select: none;
  background-color: $custom-control-indicator-bg;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: $custom-control-indicator-bg-size;
  box-shadow: $custom-control-indicator-box-shadow;

  @include rtl {
    left: auto;
    right: 0;
  }
}

// Checkboxes
//
// Tweak just a few things for checkboxes.

.customControl--checkbox {
  .customControl-indicator {
    border-radius: $custom-checkbox-indicator-border-radius;
  }

  .customControl-input:checked ~ .customControl-indicator {
    background-image: $custom-checkbox-indicator-icon-checked;
  }

  .customControl-input:indeterminate ~ .customControl-indicator {
    background-color: $custom-checkbox-indicator-indeterminate-bg;
    background-image: $custom-checkbox-indicator-icon-indeterminate;
    box-shadow: $custom-checkbox-indicator-indeterminate-box-shadow;
  }
}

// Radios
//
// Tweak just a few things for radios.

.customControl--radio {
  .customControl-indicator {
    border-radius: $custom-radio-indicator-border-radius;
  }

  .customControl-input:checked ~ .customControl-indicator {
    background-image: $custom-radio-indicator-icon-checked;
  }
}


// Layout options
//
// By default radios and checkboxes are `inline-flex` with no additional spacing
// set. Use these optional classes to tweak the layout.

.customControls--stacked {
  display: flex;
  flex-direction: column;

  .customControl {
    margin-bottom: $custom-control-spacer-y;

    + .customControl {
      margin-left: 0;
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// http://primercss.io.
//

.customSelect {
  display: inline-block;
  max-width: 100%;
  width: 100%;
  height: $input-height;
  padding: $custom-select-padding-y ($custom-select-padding-x + $custom-select-indicator-padding) $custom-select-padding-y $custom-select-padding-x;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  vertical-align: middle;
  background: $custom-select-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
  background-size: $custom-select-bg-size;
  border: $custom-select-border-width solid $custom-select-border-color;
  border-radius: $custom-select-border-radius;
  appearance: none;
  transition: $input-transition;

  &:focus {
    border-color: $custom-select-focus-border-color;
    outline: none;
    box-shadow: $custom-select-focus-box-shadow;

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // supress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &[multiple] {
    height: auto;
    background-image: none;
  }

  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    opacity: 0;
  }
}

.customSelect--sm {
  height: $custom-select-height-sm;
  padding-top: $custom-select-padding-y;
  padding-bottom: $custom-select-padding-y;
  font-size: $custom-select-font-size-sm;
}
